<?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

        <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">

           <!-- 配置登录 成功 无权限应该走的路径 -->

            <property name="securityManager" ref="securityManager" />
           <!-- <property name="successUrl" value="/member/test" />-->
            <property name="loginUrl" value="/login" />
            <property name="unauthorizedUrl" value="/error" />
            <!-- <property name="filters">
                <map>
                    <entry key="authc" value-ref="shiro"></entry>
                </map>
            </property>  -->

            <!-- <property name="filters">
                <map>
                     添加自定义的过滤器 可以多个 这里对于key的值要注意 影响到调用时间 如下面的roles表示当需要验证身份的时候才会调用这个过滤器
                    下面的过滤器是自定义的 其作用是让原本默认的roles有多个时要同时满足才可以 而使用该过滤器可以改为只要满足其中一个身份即可访问
                    /member/**=authc,roles["member,admin"] 
                    <entry key="roles">
                     <bean class="com.howard.shiro.Filter.RoleAuthorizationFilter"></bean>
                    </entry>   
                </map>
            </property> -->
            <property name="filterChainDefinitions">
                <value>
                    /login=anon
                    /submit=anon
                    /error=anon
                    /member/**=authc,roles["member,admin"]
                    /logout=logout
                </value>
            </property>
        </bean>
        <!-- 自定义的过滤器注入 -->
        <!-- <bean id="shiro" class="com.howard.shiro.Filter.ShiroFilter"/>   -->
           <!-- 自定义的realm 用于认证和授权-->
        <bean id="shiroRealm" class="com.howard.shiro.common.ShiroRealm" />

           <!-- shiro的logout有两种配置方式 一种是/logout=anon 然后在controller里自己处理 一种是/logout=logout 然后加上下面的bean配置  表示重定向到/login-->
           <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
           <property name="redirectUrl" value="/login" />
     </bean>

           <!-- securityManager的配置 -->
        <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
            <property name="realm" ref="shiroRealm" />
            <!-- 需要使用cache的话加上这句   不需要注释掉即可 shiroEhcacheManager是下面配置的bean --> <!-- cacheManager -->
          <!--   <property name="cacheManager" ref="shiroEhcacheManager" /> -->
        </bean>

        <!-- 用户授权信息Cache, 采用EhCache，需要的话就配置上此信息    -->

       <!--  <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
            <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml" />
        </bean> -->

           <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


    </beans>
